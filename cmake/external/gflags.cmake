SET(gflags_URL https://github.com/gflags/gflags)

IF(MSVC)
    SET(gflags_ADDITIONAL_CMAKE_OPTIONS "-G \"NMake MakeFiles\"")
ENDIF()

ExternalProject_Add(gflags_project
        PREFIX gflags
        GIT_REPOSITORY ${gflags_URL}
        GIT_TAG "v${gflags_VERSION}"
        DOWNLOAD_DIR "${DOWNLOAD_LOCATION}"
        UPDATE_COMMAND ""
        BUILD_IN_SOURCE 1
        SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/gflags_project/src/gflags
        INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/install
        CONFIGURE_COMMAND ${CMAKE_COMMAND}
        -DBUILD_STATIC_LIBS=ON
        -DBUILD_TESTING=OFF
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        -DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}/install
        ${gflags_ADDITIONAL_CMAKE_OPTIONS})

ADD_LIBRARY(gflags STATIC IMPORTED) 
SET_PROPERTY(TARGET gflags
    PROPERTY IMPORTED_LOCATION
    ${CMAKE_CURRENT_BINARY_DIR}/install/lib/libgflags.a)
SET_PROPERTY(TARGET gflags PROPERTY INCLUDE_DIRECTORIES
    $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/install/include/>
    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}>)

ADD_DEPENDENCIES(gflags gflags_project)
SET(gflags_LIBRARIES "")
LIST(APPEND gflags_LIBRARIES gflags)

INSTALL(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/install/include/gflags
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}
    COMPONENT Devel)

LIST(APPEND ${PROJECT_NAME}_INCLUDE_DIR ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME})

SET(gflags_INCLUDE_DIRS $<TARGET_PROPERTY:gflags,INCLUDE_DIRECTORIES>)
